{"ast":null,"code":"import { isObject } from 'utils';\n\nconst omit = (obj, props, fn) => {\n  if (!isObject(obj)) return {};\n\n  if (typeof props === 'function') {\n    fn = props;\n    props = [];\n  }\n\n  if (typeof props === 'string') {\n    props = [props];\n  }\n\n  const isFunction = typeof fn === 'function';\n  const keys = Object.keys(obj);\n  const res = {};\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (!props || props.indexOf(key) === -1 && (!isFunction || fn(val, key, obj))) {\n      res[key] = val;\n    }\n  }\n\n  return res;\n};\n\nexport default omit;","map":{"version":3,"sources":["/Users/levonazizyan/Desktop/LevelUP/Course Levelup/src/utils/omit.js"],"names":["isObject","omit","obj","props","fn","isFunction","keys","Object","res","i","length","key","val","indexOf"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,EAAb,KAAoB;AAC7B,MAAI,CAACJ,QAAQ,CAACE,GAAD,CAAb,EAAoB,OAAO,EAAP;;AAEpB,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC7BC,IAAAA,EAAE,GAAGD,KAAL;AACAA,IAAAA,KAAK,GAAG,EAAR;AACH;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACH;;AAED,QAAME,UAAU,GAAI,OAAOD,EAAP,KAAc,UAAlC;AACA,QAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,GAAZ,CAAb;AACA,QAAMM,GAAG,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAIE,GAAG,GAAGL,IAAI,CAACG,CAAD,CAAd;AACA,QAAIG,GAAG,GAAGV,GAAG,CAACS,GAAD,CAAb;;AAEA,QAAI,CAACR,KAAD,IAAWA,KAAK,CAACU,OAAN,CAAcF,GAAd,MAAuB,CAAC,CAAxB,KAA8B,CAACN,UAAD,IAAeD,EAAE,CAACQ,GAAD,EAAMD,GAAN,EAAWT,GAAX,CAA/C,CAAf,EAAiF;AAC7EM,MAAAA,GAAG,CAACG,GAAD,CAAH,GAAWC,GAAX;AACH;AACJ;;AACD,SAAOJ,GAAP;AACH,CAzBD;;AA2BA,eAAeP,IAAf","sourcesContent":["import { isObject } from 'utils';\n\nconst omit = (obj, props, fn) => {\n    if (!isObject(obj)) return {};\n\n    if (typeof props === 'function') {\n        fn = props;\n        props = [];\n    }\n\n    if (typeof props === 'string') {\n        props = [props];\n    }\n\n    const isFunction = (typeof fn === 'function');\n    const keys = Object.keys(obj);\n    const res = {};\n\n    for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var val = obj[key];\n\n        if (!props || (props.indexOf(key) === -1 && (!isFunction || fn(val, key, obj)))) {\n            res[key] = val;\n        }\n    }\n    return res;\n};\n\nexport default omit;"]},"metadata":{},"sourceType":"module"}