{"ast":null,"code":"/** RequestStore is providing a simple\n * API for operating over a stack(type: Map).\n * The main reason for having this pattern is to manage\n * requesting process.\n */\nclass RequestStore {\n  static has(hash) {\n    return RequestStore.stack.has(hash);\n  }\n\n  static set(hash, request) {\n    if (!RequestStore.has(hash)) {\n      RequestStore.stack.set(hash, request);\n    }\n  }\n\n  static get(hash) {\n    if (RequestStore.has(hash)) {\n      return RequestStore.stack.get(hash);\n    }\n  }\n\n  static drop(hash) {\n    if (RequestStore.has(hash)) {\n      RequestStore.stack.delete(hash);\n    }\n  }\n\n}\n\nRequestStore.stack = new Map();\n;\nexport default RequestStore;","map":{"version":3,"sources":["/Users/levonazizyan/Desktop/LevelUP/Course Levelup/src/utils/fetch/requestStore.js"],"names":["RequestStore","has","hash","stack","set","request","get","drop","delete","Map"],"mappings":"AAAA;;;;;AAMA,MAAMA,YAAN,CAAmB;AAGjB,SAAOC,GAAP,CAAWC,IAAX,EAAiB;AACf,WAAOF,YAAY,CAACG,KAAb,CAAmBF,GAAnB,CAAuBC,IAAvB,CAAP;AACD;;AAED,SAAOE,GAAP,CAAWF,IAAX,EAAiBG,OAAjB,EAA0B;AACxB,QAAI,CAACL,YAAY,CAACC,GAAb,CAAiBC,IAAjB,CAAL,EAA6B;AAC3BF,MAAAA,YAAY,CAACG,KAAb,CAAmBC,GAAnB,CAAuBF,IAAvB,EAA6BG,OAA7B;AACD;AACF;;AAED,SAAOC,GAAP,CAAWJ,IAAX,EAAiB;AACf,QAAIF,YAAY,CAACC,GAAb,CAAiBC,IAAjB,CAAJ,EAA4B;AAC1B,aAAOF,YAAY,CAACG,KAAb,CAAmBG,GAAnB,CAAuBJ,IAAvB,CAAP;AACD;AACF;;AAED,SAAOK,IAAP,CAAYL,IAAZ,EAAkB;AAChB,QAAIF,YAAY,CAACC,GAAb,CAAiBC,IAAjB,CAAJ,EAA4B;AAC1BF,MAAAA,YAAY,CAACG,KAAb,CAAmBK,MAAnB,CAA0BN,IAA1B;AACD;AACF;;AAvBgB;;AAAbF,Y,CACGG,K,GAAQ,IAAIM,GAAJ,E;AAuBhB;AAED,eAAeT,YAAf","sourcesContent":["/** RequestStore is providing a simple\n * API for operating over a stack(type: Map).\n * The main reason for having this pattern is to manage\n * requesting process.\n */\n\nclass RequestStore {\n  static stack = new Map();\n\n  static has(hash) {\n    return RequestStore.stack.has(hash);\n  }\n\n  static set(hash, request) {\n    if (!RequestStore.has(hash)) {\n      RequestStore.stack.set(hash, request);\n    }\n  }\n\n  static get(hash) {\n    if (RequestStore.has(hash)) {\n      return RequestStore.stack.get(hash);\n    }\n  }\n\n  static drop(hash) {\n    if (RequestStore.has(hash)) {\n      RequestStore.stack.delete(hash);\n    }\n  }\n};\n\nexport default RequestStore;\n"]},"metadata":{},"sourceType":"module"}