{"ast":null,"code":"import _slicedToArray from \"/Users/levonazizyan/Desktop/LevelUP/Course Levelup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/levonazizyan/Desktop/LevelUP/Course Levelup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/levonazizyan/Desktop/LevelUP/Course Levelup/src/components/organisms/Dropdown/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport classnames from 'classnames';\nimport { useTranslator } from 'utils/translator';\nimport { Icon, Paper } from 'components';\nimport './style.scss';\n\nconst Dropdown = (_ref) => {\n  let data = _ref.data,\n      onChange = _ref.onChange,\n      selected = _ref.selected,\n      darkMode = _ref.darkMode,\n      restProps = _objectWithoutProperties(_ref, [\"data\", \"onChange\", \"selected\", \"darkMode\"]);\n\n  const _useTranslator = useTranslator(),\n        t = _useTranslator.t;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        active = _useState2[0],\n        setActive = _useState2[1];\n\n  const wrapperRef = useRef(null);\n\n  function handleClickOutside(event) {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      if (!(window.innerWidth < 900)) {\n        setActive(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  return React.createElement(Paper, {\n    className: classnames('Dropdown', {\n      'darkMode': darkMode\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    onClick: () => setActive(!active),\n    className: classnames(\"Dropdown_label\", {\n      active\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, t(selected.label), React.createElement(Icon, {\n    name: \"arrowDown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), active && React.createElement(Paper, {\n    className: \"Dropdown_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    flexName: \"flexible vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"dropdown-list\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.map(item => item.value !== selected.value && React.createElement(\"span\", {\n    onClick: () => {\n      onChange(item);\n      setActive(false);\n    },\n    key: item.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, t(item.label)))))));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/levonazizyan/Desktop/LevelUP/Course Levelup/src/components/organisms/Dropdown/index.js"],"names":["React","useState","useRef","useEffect","classnames","useTranslator","Icon","Paper","Dropdown","data","onChange","selected","darkMode","restProps","t","active","setActive","wrapperRef","handleClickOutside","event","current","contains","target","window","innerWidth","document","addEventListener","removeEventListener","label","map","item","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SACEC,IADF,EAEEC,KAFF,QAGO,YAHP;AAKA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,UAMX;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,SACC;;AAAA,yBAEUR,aAAa,EAFvB;AAAA,QAEIS,CAFJ,kBAEIA,CAFJ;;AAAA,oBAIwBb,QAAQ,CAAC,KAAD,CAJhC;AAAA;AAAA,QAIGc,MAJH;AAAA,QAIWC,SAJX;;AAMJ,QAAMC,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;;AAEA,WAASgB,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIF,UAAU,CAACG,OAAX,IAAsB,CAACH,UAAU,CAACG,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAA3B,EAAsE;AACpE,UAAG,EAAEC,MAAM,CAACC,UAAP,GAAoB,GAAtB,CAAH,EAA+B;AAC7BR,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF;AACF;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,KAFD;AAGD,GALQ,CAAT;AAOA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEd,UAAU,CAAC,UAAD,EAAa;AAAE,kBAAYQ;AAAd,KAAb,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,MAAMI,SAAS,CAAC,CAACD,MAAF,CAD1B;AAEE,IAAA,SAAS,EAAEX,UAAU,CAAC,gBAAD,EAAmB;AAAEW,MAAAA;AAAF,KAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,CAAC,CAACH,QAAQ,CAACiB,KAAV,CAJJ,EAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EASIb,MAAM,IACN,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,GAAG,EAAEE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIR,IAAI,CAACoB,GAAL,CAAUC,IAAD,IACPA,IAAI,CAACC,KAAL,KAAepB,QAAQ,CAACoB,KAAxB,IACA;AACE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,QAAQ,CAACoB,IAAD,CAAR;AACAd,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAJH;AAKE,IAAA,GAAG,EAAEc,IAAI,CAACC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGjB,CAAC,CAACgB,IAAI,CAACF,KAAN,CAPJ,CAFF,CAFJ,CADF,CADF,CAVJ,CADF;AAkCD,CA/DD;;AAiEA,eAAepB,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport { useTranslator } from 'utils/translator';\n\nimport {\n  Icon,\n  Paper,\n} from 'components';\n\nimport './style.scss';\n\nconst Dropdown = ({\n  data,\n  onChange,\n  selected,\n  darkMode,\n  ...restProps\n}) => {\n\n  const { t } = useTranslator();\n\n  const [active, setActive] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  function handleClickOutside(event) {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      if(!(window.innerWidth < 900)) {\n        setActive(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  return (\n    <Paper className={classnames('Dropdown', { 'darkMode': darkMode })}>\n      <Paper\n        onClick={() => setActive(!active)}\n        className={classnames(\"Dropdown_label\", { active })}\n        >\n        {t(selected.label)}\n        <Icon name=\"arrowDown\"/>\n      </Paper>\n      {\n        active &&\n        <Paper className=\"Dropdown_content\">\n          <Paper flexName=\"flexible vertical\">\n            <Paper className=\"dropdown-list\" ref={wrapperRef}>\n              {\n                data.map((item) => (\n                  item.value !== selected.value &&\n                  <span\n                    onClick={() => {\n                      onChange(item);\n                      setActive(false);\n                    }}\n                    key={item.value}\n                    >\n                    {t(item.label)}\n                  </span>\n                ))\n              }\n            </Paper>\n          </Paper>\n        </Paper>\n      }\n    </Paper>\n  )\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}